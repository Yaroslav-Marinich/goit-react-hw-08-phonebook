{"version":3,"file":"static/js/111.1df601eb.chunk.js","mappings":"mQAYMA,EAAcC,EAAAA,GAAW,CAC7BC,MAAOD,EAAAA,KAAaC,MAAM,yBAAyBC,SAAS,YAC5DC,SAAUH,EAAAA,KACPI,IAAI,EAAG,6CACPC,QAAQ,WAAY,mDACpBH,SAAS,cAGDI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iBAAKC,UAAU,qBAAf,WACE,eAAIA,UAAU,iBAAd,0BACA,SAAC,KAAD,CACEC,cAAe,CAAET,MAAO,GAAIE,SAAU,IACtCQ,iBAAkBZ,EAClBa,SAAU,SAACC,EAAQC,GACjBP,GAASQ,EAAAA,EAAAA,IAAMF,IACfC,EAAQE,WACT,EANH,UAQE,UAAC,KAAD,CAAMC,aAAa,MAAMR,UAAU,YAAnC,WACE,mBAAOA,UAAU,iBAAjB,mBAEE,SAAC,KAAD,CACES,KAAK,QACLC,KAAK,QACLC,YAAY,iBACZX,UAAU,oBAEZ,SAAC,KAAD,CACEU,KAAK,QACLE,UAAU,OACVZ,UAAU,uBAGd,mBAAOA,UAAU,iBAAjB,sBAEE,SAAC,KAAD,CACES,KAAK,WACLC,KAAK,WACLC,YAAY,WACZX,UAAU,oBAEZ,SAAC,KAAD,CACEU,KAAK,WACLE,UAAU,OACVZ,UAAU,uBAGd,mBAAQS,KAAK,SAAST,UAAU,eAAhC,0BAMJ,eAAGA,UAAU,YAAb,iDAEE,SAAC,KAAD,CAAMa,GAAG,YAAYb,UAAU,gBAA/B,4BAMP,EClED,EATc,WACZ,OACE,4BACE,uCACA,SAACH,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import {\n  Formik,\n  Field,\n  Form,\n  ErrorMessage,\n} from 'formik';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport * as Yup from 'yup';\nimport './styles.css'\n\nconst LogInScheme = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(8, 'Password must contain 8 characters as min')\n    .matches(/[a-zA-Z]/, 'Password must contain at least one Latin letter')\n    .required('Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"loginFormContainer\">\n      <h1 className=\"loginFormTitle\">Log In form</h1>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={LogInScheme}\n        onSubmit={(values, actions) => {\n          dispatch(logIn(values));\n          actions.resetForm();\n        }}\n      >\n        <Form autoComplete=\"off\" className=\"loginForm\">\n          <label className=\"loginFormLabel\">\n            Email\n            <Field\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"john@gmail.com\"\n              className=\"loginFormInput\"\n            />\n            <ErrorMessage\n              name=\"email\"\n              component=\"span\"\n              className=\"loginFormError\"\n            />\n          </label>\n          <label className=\"loginFormLabel\">\n            Password\n            <Field\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"********\"\n              className=\"loginFormInput\"\n            />\n            <ErrorMessage\n              name=\"password\"\n              component=\"span\"\n              className=\"loginFormError\"\n            />\n          </label>\n          <button type=\"submit\" className=\"loginFormBtn\">\n            Log In\n          </button>\n        </Form>\n      </Formik>\n\n      <p className=\"loginText\">\n        Is it your first time here? Please,\n        <Link to=\"/register\" className=\"loginTextLink\">\n          Register!\n        </Link>\n      </p>\n    </div>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <div>\n      <title>Log In</title>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["LogInScheme","Yup","email","required","password","min","matches","LoginForm","dispatch","useDispatch","className","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","autoComplete","type","name","placeholder","component","to"],"sourceRoot":""}